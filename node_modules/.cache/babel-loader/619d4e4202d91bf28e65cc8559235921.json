{"ast":null,"code":"\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar assign = require('object-assign');\n\nvar Observable = require('@sanity/observable/minimal');\n\nvar polyfilledEventSource = require('@sanity/eventsource');\n\nvar generateHelpUrl = require('@sanity/generate-help-url');\n\nvar pick = require('../util/pick');\n\nvar once = require('../util/once');\n\nvar defaults = require('../util/defaults');\n\nvar encodeQueryString = require('./encodeQueryString');\n\nvar tokenWarning = ['Using token with listeners is not supported in browsers. ', \"For more info, see \".concat(generateHelpUrl('js-client-listener-tokens-browser'), \".\")]; // eslint-disable-next-line no-console\n\nvar printTokenWarning = once(function () {\n  return console.warn(tokenWarning.join(' '));\n});\nvar isWindowEventSource = Boolean(typeof window !== 'undefined' && window.EventSource);\nvar EventSource = isWindowEventSource ? window.EventSource // Native browser EventSource\n: polyfilledEventSource; // Node.js, IE etc\n\nvar possibleOptions = ['includePreviousRevision', 'includeResult', 'visibility', 'effectFormat', 'tag'];\nvar defaultOptions = {\n  includeResult: true\n};\n\nmodule.exports = function listen(query, params) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _this$clientConfig = this.clientConfig,\n      url = _this$clientConfig.url,\n      token = _this$clientConfig.token,\n      withCredentials = _this$clientConfig.withCredentials,\n      requestTagPrefix = _this$clientConfig.requestTagPrefix;\n  var tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join('.') : opts.tag;\n\n  var options = _objectSpread(_objectSpread({}, defaults(opts, defaultOptions)), {}, {\n    tag: tag\n  });\n\n  var listenOpts = pick(options, possibleOptions);\n  var qs = encodeQueryString({\n    query: query,\n    params: params,\n    options: listenOpts,\n    tag: tag\n  });\n  var uri = \"\".concat(url).concat(this.getDataUrl('listen', qs));\n  var listenFor = options.events ? options.events : ['mutation'];\n  var shouldEmitReconnect = listenFor.indexOf('reconnect') !== -1;\n\n  if (token && isWindowEventSource) {\n    printTokenWarning();\n  }\n\n  var esOptions = {};\n\n  if (token || withCredentials) {\n    esOptions.withCredentials = true;\n  }\n\n  if (token) {\n    esOptions.headers = {\n      Authorization: \"Bearer \".concat(token)\n    };\n  }\n\n  return new Observable(function (observer) {\n    var es = getEventSource();\n    var reconnectTimer;\n    var stopped = false;\n\n    function onError() {\n      if (stopped) {\n        return;\n      }\n\n      emitReconnect(); // Allow event handlers of `emitReconnect` to cancel/close the reconnect attempt\n\n      if (stopped) {\n        return;\n      } // Unless we've explicitly stopped the ES (in which case `stopped` should be true),\n      // we should never be in a disconnected state. By default, EventSource will reconnect\n      // automatically, in which case it sets readyState to `CONNECTING`, but in some cases\n      // (like when a laptop lid is closed), it closes the connection. In these cases we need\n      // to explicitly reconnect.\n\n\n      if (es.readyState === EventSource.CLOSED) {\n        unsubscribe();\n        clearTimeout(reconnectTimer);\n        reconnectTimer = setTimeout(open, 100);\n      }\n    }\n\n    function onChannelError(err) {\n      observer.error(cooerceError(err));\n    }\n\n    function onMessage(evt) {\n      var event = parseEvent(evt);\n      return event instanceof Error ? observer.error(event) : observer.next(event);\n    }\n\n    function onDisconnect(evt) {\n      stopped = true;\n      unsubscribe();\n      observer.complete();\n    }\n\n    function unsubscribe() {\n      es.removeEventListener('error', onError, false);\n      es.removeEventListener('channelError', onChannelError, false);\n      es.removeEventListener('disconnect', onDisconnect, false);\n      listenFor.forEach(function (type) {\n        return es.removeEventListener(type, onMessage, false);\n      });\n      es.close();\n    }\n\n    function emitReconnect() {\n      if (shouldEmitReconnect) {\n        observer.next({\n          type: 'reconnect'\n        });\n      }\n    }\n\n    function getEventSource() {\n      var evs = new EventSource(uri, esOptions);\n      evs.addEventListener('error', onError, false);\n      evs.addEventListener('channelError', onChannelError, false);\n      evs.addEventListener('disconnect', onDisconnect, false);\n      listenFor.forEach(function (type) {\n        return evs.addEventListener(type, onMessage, false);\n      });\n      return evs;\n    }\n\n    function open() {\n      es = getEventSource();\n    }\n\n    function stop() {\n      stopped = true;\n      unsubscribe();\n    }\n\n    return stop;\n  });\n};\n\nfunction parseEvent(event) {\n  try {\n    var data = event.data && JSON.parse(event.data) || {};\n    return assign({\n      type: event.type\n    }, data);\n  } catch (err) {\n    return err;\n  }\n}\n\nfunction cooerceError(err) {\n  if (err instanceof Error) {\n    return err;\n  }\n\n  var evt = parseEvent(err);\n  return evt instanceof Error ? evt : new Error(extractErrorMessage(evt));\n}\n\nfunction extractErrorMessage(err) {\n  if (!err.error) {\n    return err.message || 'Unknown listener error';\n  }\n\n  if (err.error.description) {\n    return err.error.description;\n  }\n\n  return typeof err.error === 'string' ? err.error : JSON.stringify(err.error, null, 2);\n}","map":{"version":3,"sources":["/home/essayyzed/Documents/react_portfolio/node_modules/@sanity/client/lib/data/listen.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","assign","require","Observable","polyfilledEventSource","generateHelpUrl","pick","once","defaults","encodeQueryString","tokenWarning","concat","printTokenWarning","console","warn","join","isWindowEventSource","Boolean","window","EventSource","possibleOptions","defaultOptions","includeResult","module","exports","listen","query","params","opts","undefined","_this$clientConfig","clientConfig","url","token","withCredentials","requestTagPrefix","tag","options","listenOpts","qs","uri","getDataUrl","listenFor","events","shouldEmitReconnect","indexOf","esOptions","headers","Authorization","observer","es","getEventSource","reconnectTimer","stopped","onError","emitReconnect","readyState","CLOSED","unsubscribe","clearTimeout","setTimeout","open","onChannelError","err","error","cooerceError","onMessage","evt","event","parseEvent","Error","next","onDisconnect","complete","removeEventListener","type","close","evs","addEventListener","stop","data","JSON","parse","extractErrorMessage","message","description","stringify"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar assign = require('object-assign');\n\nvar Observable = require('@sanity/observable/minimal');\n\nvar polyfilledEventSource = require('@sanity/eventsource');\n\nvar generateHelpUrl = require('@sanity/generate-help-url');\n\nvar pick = require('../util/pick');\n\nvar once = require('../util/once');\n\nvar defaults = require('../util/defaults');\n\nvar encodeQueryString = require('./encodeQueryString');\n\nvar tokenWarning = ['Using token with listeners is not supported in browsers. ', \"For more info, see \".concat(generateHelpUrl('js-client-listener-tokens-browser'), \".\")]; // eslint-disable-next-line no-console\n\nvar printTokenWarning = once(function () {\n  return console.warn(tokenWarning.join(' '));\n});\nvar isWindowEventSource = Boolean(typeof window !== 'undefined' && window.EventSource);\nvar EventSource = isWindowEventSource ? window.EventSource // Native browser EventSource\n: polyfilledEventSource; // Node.js, IE etc\n\nvar possibleOptions = ['includePreviousRevision', 'includeResult', 'visibility', 'effectFormat', 'tag'];\nvar defaultOptions = {\n  includeResult: true\n};\n\nmodule.exports = function listen(query, params) {\n  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var _this$clientConfig = this.clientConfig,\n      url = _this$clientConfig.url,\n      token = _this$clientConfig.token,\n      withCredentials = _this$clientConfig.withCredentials,\n      requestTagPrefix = _this$clientConfig.requestTagPrefix;\n  var tag = opts.tag && requestTagPrefix ? [requestTagPrefix, opts.tag].join('.') : opts.tag;\n\n  var options = _objectSpread(_objectSpread({}, defaults(opts, defaultOptions)), {}, {\n    tag: tag\n  });\n\n  var listenOpts = pick(options, possibleOptions);\n  var qs = encodeQueryString({\n    query: query,\n    params: params,\n    options: listenOpts,\n    tag: tag\n  });\n  var uri = \"\".concat(url).concat(this.getDataUrl('listen', qs));\n  var listenFor = options.events ? options.events : ['mutation'];\n  var shouldEmitReconnect = listenFor.indexOf('reconnect') !== -1;\n\n  if (token && isWindowEventSource) {\n    printTokenWarning();\n  }\n\n  var esOptions = {};\n\n  if (token || withCredentials) {\n    esOptions.withCredentials = true;\n  }\n\n  if (token) {\n    esOptions.headers = {\n      Authorization: \"Bearer \".concat(token)\n    };\n  }\n\n  return new Observable(function (observer) {\n    var es = getEventSource();\n    var reconnectTimer;\n    var stopped = false;\n\n    function onError() {\n      if (stopped) {\n        return;\n      }\n\n      emitReconnect(); // Allow event handlers of `emitReconnect` to cancel/close the reconnect attempt\n\n      if (stopped) {\n        return;\n      } // Unless we've explicitly stopped the ES (in which case `stopped` should be true),\n      // we should never be in a disconnected state. By default, EventSource will reconnect\n      // automatically, in which case it sets readyState to `CONNECTING`, but in some cases\n      // (like when a laptop lid is closed), it closes the connection. In these cases we need\n      // to explicitly reconnect.\n\n\n      if (es.readyState === EventSource.CLOSED) {\n        unsubscribe();\n        clearTimeout(reconnectTimer);\n        reconnectTimer = setTimeout(open, 100);\n      }\n    }\n\n    function onChannelError(err) {\n      observer.error(cooerceError(err));\n    }\n\n    function onMessage(evt) {\n      var event = parseEvent(evt);\n      return event instanceof Error ? observer.error(event) : observer.next(event);\n    }\n\n    function onDisconnect(evt) {\n      stopped = true;\n      unsubscribe();\n      observer.complete();\n    }\n\n    function unsubscribe() {\n      es.removeEventListener('error', onError, false);\n      es.removeEventListener('channelError', onChannelError, false);\n      es.removeEventListener('disconnect', onDisconnect, false);\n      listenFor.forEach(function (type) {\n        return es.removeEventListener(type, onMessage, false);\n      });\n      es.close();\n    }\n\n    function emitReconnect() {\n      if (shouldEmitReconnect) {\n        observer.next({\n          type: 'reconnect'\n        });\n      }\n    }\n\n    function getEventSource() {\n      var evs = new EventSource(uri, esOptions);\n      evs.addEventListener('error', onError, false);\n      evs.addEventListener('channelError', onChannelError, false);\n      evs.addEventListener('disconnect', onDisconnect, false);\n      listenFor.forEach(function (type) {\n        return evs.addEventListener(type, onMessage, false);\n      });\n      return evs;\n    }\n\n    function open() {\n      es = getEventSource();\n    }\n\n    function stop() {\n      stopped = true;\n      unsubscribe();\n    }\n\n    return stop;\n  });\n};\n\nfunction parseEvent(event) {\n  try {\n    var data = event.data && JSON.parse(event.data) || {};\n    return assign({\n      type: event.type\n    }, data);\n  } catch (err) {\n    return err;\n  }\n}\n\nfunction cooerceError(err) {\n  if (err instanceof Error) {\n    return err;\n  }\n\n  var evt = parseEvent(err);\n  return evt instanceof Error ? evt : new Error(extractErrorMessage(evt));\n}\n\nfunction extractErrorMessage(err) {\n  if (!err.error) {\n    return err.message || 'Unknown listener error';\n  }\n\n  if (err.error.description) {\n    return err.error.description;\n  }\n\n  return typeof err.error === 'string' ? err.error : JSON.stringify(err.error, null, 2);\n}"]},"metadata":{},"sourceType":"script"}